apply plugin: 'com.android.library'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion androidSdkTarget
    buildToolsVersion androidBuildTools

    dexOptions {
        javaMaxHeapSize dexJavaMaxHeapSize
        preDexLibraries dexPreDexLibraries
        incremental dexIncremental
    }

    defaultConfig {
        minSdkVersion androidSdkMinimum
        targetSdkVersion androidSdkTarget
        versionCode appVersionCode
        versionName appVersionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    publishNonDefault true
    productFlavors {
        store {
            // No ability to choose mock core modules
        }
        mock {
            // Ability to toggle mock core modules
        }
        fast {
            // Allows for faster builds
            minSdkVersion androidSdkMinimumFast
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude "META-INF/LICENSE"
        exclude "META-INF/NOTICE"
        exclude "META-INF/license"
        exclude "META-INF/notice"
        exclude "META-INF/LICENSE.txt"
        exclude "META-INF/license.txt"
        exclude "META-INF/NOTICE.txt"
        exclude "META-INF/notice.txt"
        exclude 'LICENSE.txt'
    }

    lintOptions {
        abortOnError lintAbortOnError
        checkReleaseBuilds lintCheckReleaseBuilds
        absolutePaths lintAbsolutePaths
        checkAllWarnings lintCheckAllWarnings
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    testOptions {
        unitTests.returnDefaultValues = unitTestsReturnDefaultValues
    }
}

configurations {
    storeDebugCompile
    mockDebugCompile
    fastDebugCompile
    storeReleaseCompile
    mockReleaseCompile
    fastReleaseCompile
}

dependencies {
    storeDebugCompile project(path: ':storage', configuration: 'storeDebug')
    mockDebugCompile project(path: ':storage', configuration: 'mockDebug')
    fastDebugCompile project(path: ':storage', configuration: 'fastDebug')
    storeReleaseCompile project(path: ':storage', configuration: 'storeRelease')
    mockReleaseCompile project(path: ':storage', configuration: 'mockRelease')
    fastReleaseCompile project(path: ':storage', configuration: 'fastRelease')

    // Google Support Library
    compile "com.android.support:appcompat-v7:${androidSupportLibraryVersion}"

    // Dependency Injection
    apt "com.google.dagger:dagger-compiler:${daggerVersion}"
    compile "com.google.dagger:dagger:${daggerVersion}"

    // Android does not have @Generated
    provided "javax.annotation:jsr250-api:${jsr250Version}"

    // Unit Testing
    testCompile "junit:junit:${junitVersion}"

    // Integration Testing
}
